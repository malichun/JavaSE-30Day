package github.service;

import github.domain.*;
import static github.service.Data.*;
/**
 * 
 * @Description 负责将Data中的数据封装到Employee[]数组中，同时提供相关操作Employee[]的方法。
 * @author subei Email:subei@163.com
 * @version v1.0
 * @date 2020年5月6日下午5:42:19
 *
 */
public class NameListService {
	private Employee[] employees;

	/**
	 * 给employees及数组元素进行初始化
	 */
	public NameListService() {
		/*
		 * 1.根据项目提供的Data类构建相应大小的employees数组
		 * 2.再根据Data类中的数据构建不同的对象，包括Employee、Programmer、Designer
		 * 和Architect对象，以及相关联的Equipment子类的对象 3.将对象存于数组中
		 */
		employees = new Employee[EMPLOYEES.length];

		for (int i = 0; i < employees.length; i++) {
			// 获取员工的类型
			int type = Integer.parseInt(EMPLOYEES[i][0]);
			//获取employee的4个基本信息
			int id = Integer.parseInt(EMPLOYEES[i][1]);
			String name = EMPLOYEES[i][2];
			int age = Integer.parseInt(EMPLOYEES[i][3]);
			double salary = Double.parseDouble(EMPLOYEES[i][4]);
			
			//
			Equipment eq;
			double bonus;
			int stock;
			
			switch(type){
			case EMPLOYEE:
				employees[i] = new Employee(id, name, age, salary);
				break;
			case PROGRAMMER:
				eq = createEquipment(i);
				employees[i] = new Programer(id, name, age, salary, eq);
				break;
			case DESIGNER:
				
				break;
			case ARCHITECT:
				
				break;
			}
		}
	}

	private Equipment createEquipment(int i) {
		// TODO Auto-generated method stub
		return null;
	}

	public Employee[] getAllEmployees() {
		return null;
	}

	public Employee getEmployee(int id) {
		return null;
	}
}
